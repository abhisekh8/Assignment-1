//Design a Java program for university student enrollment, ensuring loose coupling and
high cohesion. Create Student and Course classes, and an Enrollment class that
interacts with them through an EnrollmentSystem interface. Implement methods for
enrolling and dropping students from courses, and displaying enrollment details. In the
MainEnrollApp class, demonstrate functionality by managing student enrollments.
Use comments to explain how the design maintains loose coupling (by relying on
interfaces) and high cohesion (by keeping related functionalities within appropriate
classes).



import java.util.ArrayList;
import java.util.List;


class Student {
    private int studentId;
    private String name;

    public Student(int studentId, String name) {
        this.studentId = studentId;
        this.name = name;
    }

    public int getStudentId() {
        return studentId;
    }

    public String getName() {
        return name;
    }
}


class Course {
    private String courseCode;
    private String courseName;

    public Course(String courseCode, String courseName) {
        this.courseCode = courseCode;
        this.courseName = courseName;
    }

    public String getCourseCode() {
        return courseCode;
    }

    public String getCourseName() {
        return courseName;
    }
}


interface EnrollmentSystem {
    void enrollStudent(Student student, Course course);
    void dropStudent(Student student, Course course);
    void displayEnrollments();
}


class Enrollment implements EnrollmentSystem {
    private List<String> enrollments = new ArrayList<>();

    @Override
    public void enrollStudent(Student student, Course course) {
        String enrollment = student.getName() + " enrolled in " + course.getCourseName();
        enrollments.add(enrollment);
        System.out.println(enrollment);
    }

    @Override
    public void dropStudent(Student student, Course course) {
        String enrollment = student.getName() + " enrolled in " + course.getCourseName();
        if (enrollments.remove(enrollment)) {
            System.out.println(student.getName() + " dropped from " + course.getCourseName());
        } else {
            System.out.println("No enrollment record found for " + student.getName() + " in " + course.getCourseName());
        }
    }

    @Override
    public void displayEnrollments() {
        System.out.println("\nCurrent Enrollments:");
        for (String e : enrollments) {
            System.out.println(e);
        }
        System.out.println("");
    }
}


public class MainEnrollApp {
    public static void main(String[] args) {
        
        Student student1 = new Student(101, "sam");
        Student student2 = new Student(102, "abhi");

       
        Course course1 = new Course("CS101", "Computer Science");
        Course course2 = new Course("MTH201", "Calculus");

       
        EnrollmentSystem enrollmentSystem = new Enrollment();

       
        enrollmentSystem.enrollStudent(student1, course1);
        enrollmentSystem.enrollStudent(student2, course2);
        enrollmentSystem.enrollStudent(student1, course2);

       
        enrollmentSystem.displayEnrollments();

       
        enrollmentSystem.dropStudent(student1, course1);
        enrollmentSystem.displayEnrollments();
    }
}
